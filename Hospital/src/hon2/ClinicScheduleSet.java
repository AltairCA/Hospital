/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hon2;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import java.util.HashMap;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.design.*;
import net.sf.jasperreports.view.*;

/**
 *
 * @author ShredHead
 */
public class ClinicScheduleSet extends javax.swing.JFrame {

    /**
     * Creates new form ClinicScheduleSet
     */
    Connection con = null;
    PreparedStatement pst = null;
    
    public void close()
    {
        WindowEvent winClosingEvent = new WindowEvent (this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
     
    
    private void update_table()
    {
        try{
        String sql1 = "SELECT clinic AS Clinic,day AS Day,roomNo AS Room FROM `clinicschedule`";
        pst = con.prepareStatement(sql1);
        ResultSet dates = pst.executeQuery();
        if (dates.next())
        {    
            dates.beforeFirst();
            tblClinicDates.setModel(DbUtils.resultSetToTableModel(dates));
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Clinic Schedule is empty. Please Enter Clinic Dates.");
        }
        }
        catch(Exception eae)
        {
            JOptionPane.showMessageDialog(null,eae);
        }
    }
    
    
    
    public void userInfo (String userName, int level)
    {
        lblUserName.setText("Hello " +userName+ "!");
        lblUserLevel.setText("Level : Admin");
    }
    
    public ClinicScheduleSet() {
        initComponents();
        con = DBConnect.ConnectDB();
        update_table();
        tblClinicDates.getSelectionModel().clearSelection();
        btnDelete.setEnabled(false);
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDeselect.setEnabled(false);
        cmbClinicType.setSelectedIndex(0);
        cmbDay.setSelectedIndex(0);
        txtRoomNo.setText("");
        this.setLocationRelativeTo(null);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        pnlAddClinic = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbClinicType = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cmbDay = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtRoomNo = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDeselect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClinicDates = new javax.swing.JTable();
        lblUserName = new javax.swing.JLabel();
        lblUserLevel = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(996, 705));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel1.setText("Set Clinic Dates");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(380, 30, 228, 44);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 110, 1000, 10);

        pnlAddClinic.setLayout(new java.awt.CardLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Clinic :");

        cmbClinicType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cardiac", "Diabetic", "ENT", "Paediatric", "ARC", "Skin", "Gynaecology", "Surgery", "Medical", "ANC", "Eye", "Family", "STD", "Nutrition", "Orthodontic", "Psychiatry" }));
        cmbClinicType.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbClinicTypePropertyChange(evt);
            }
        });

        jLabel3.setText("Day :");

        cmbDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));
        cmbDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDayActionPerformed(evt);
            }
        });

        jLabel4.setText("Room :");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDeselect.setText("Deselect");
        btnDeselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeselectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cmbClinicType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel3)
                        .addGap(12, 12, 12)
                        .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(596, 596, 596)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeselect)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbClinicType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeselect)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd))
                .addContainerGap())
        );

        pnlAddClinic.add(jPanel2, "card2");

        getContentPane().add(pnlAddClinic);
        pnlAddClinic.setBounds(40, 130, 920, 110);

        tblClinicDates.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblClinicDates.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClinicDatesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClinicDates);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 250, 920, 371);

        lblUserName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUserName.setText("jLabel6");
        getContentPane().add(lblUserName);
        lblUserName.setBounds(820, 40, 80, 15);

        lblUserLevel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUserLevel.setText("jLabel6");
        getContentPane().add(lblUserLevel);
        lblUserLevel.setBounds(820, 60, 70, 15);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hon2/backbtn.jpg"))); // NOI18N
        jButton5.setMaximumSize(new java.awt.Dimension(33, 9));
        jButton5.setMinimumSize(new java.awt.Dimension(33, 9));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(20, 20, 71, 71);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Profile");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jLabel15);
        jLabel15.setBounds(820, 10, 50, 20);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 51));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Logout");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jLabel13);
        jLabel13.setBounds(820, 80, 50, 20);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hon2/admin1.png"))); // NOI18N
        getContentPane().add(jLabel12);
        jLabel12.setBounds(920, 10, 60, 80);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hon2/bg.jpg"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 1050, 840);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDayActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String strClinic = (String) cmbClinicType.getSelectedItem();
        String strDay = (String) cmbDay.getSelectedItem();
        String roomNo = txtRoomNo.getText().trim();
        String sqlQuery = "INSERT INTO clinicschedule (clinic,day,roomNo) values (?,?,?)";
        if ((roomNo != null) && (!roomNo.isEmpty()))
        {   
        try 
        {
            pst = con.prepareStatement(sqlQuery);
            pst.setString(1, strClinic);
            pst.setString(2, strDay);
            pst.setString(3, roomNo);
            pst.execute();
            if (strDay.equals("Monday"))
            {
                sqlQuery = "INSERT INTO clinic_monday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Added!");
            }
            else if (strDay.equals("Tuesday"))
            {
                sqlQuery = "INSERT INTO clinic_tuesday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Added!");
            }
            else if (strDay.equals("Wednesday"))
            {
                sqlQuery = "INSERT INTO clinic_wednesday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Added!");
            }
            else if (strDay.equals("Thursday"))
            {
                sqlQuery = "INSERT INTO clinic_thursday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Added!");
            }
            else if (strDay.equals("Friday"))
            {
                sqlQuery = "INSERT INTO clinic_friday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Added!");
            }
            else if (strDay.equals("Saturday"))
            {
                sqlQuery = "INSERT INTO clinic_saturday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Added!");
            }
            
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(ClinicScheduleSet.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Room Number cannot be empty.");
        }
        cmbClinicType.setSelectedIndex(1);
        cmbDay.setSelectedIndex(1);
        txtRoomNo.setText("");
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblClinicDatesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClinicDatesMouseClicked
        // TODO add your handling code here:
        btnDelete.setEnabled(true);
        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnDeselect.setEnabled(true);
        int row = tblClinicDates.getSelectedRow();
        String clinic = (String)(tblClinicDates.getModel().getValueAt(row, 0));
        String day = (String)(tblClinicDates.getModel().getValueAt(row, 1));
        String room = (String)(tblClinicDates.getModel().getValueAt(row, 2));
        cmbClinicType.setSelectedItem(clinic);
        cmbDay.setSelectedItem(day);
        txtRoomNo.setText(room);
    }//GEN-LAST:event_tblClinicDatesMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = tblClinicDates.getSelectedRow();
        String clinic = (String)(tblClinicDates.getModel().getValueAt(row, 0));
        String day = (String)(tblClinicDates.getModel().getValueAt(row, 1));
        String room = (String)(tblClinicDates.getModel().getValueAt(row, 2));
        String sqlQuery = "DELETE FROM clinicschedule WHERE clinic = ? AND day = ? AND roomNo = ?";
        try 
        {
            pst = con.prepareStatement(sqlQuery);
            pst.setString(1,clinic);
            pst.setString(2,day);
            pst.setString(3,room);
            pst.execute();
            if (day.equals("Monday"))
            {
                sqlQuery = "DELETE FROM clinic_monday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully removed!");
            }
            else if (day.equals("Tuesday"))
            {
                sqlQuery = "DELETE FROM clinic_tuesday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully removed!");
            }
            else if (day.equals("Wednesday"))
            {
                sqlQuery = "DELETE FROM clinic_wednesday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully removed!");
            }
            else if (day.equals("Thursday"))
            {
                sqlQuery = "DELETE FROM clinic_thursday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully removed!");
            }
            else if (day.equals("Friday"))
            {
                sqlQuery = "DELETE FROM clinic_friday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully removed!");
            }
            else if (day.equals("Saturday"))
            {
                sqlQuery = "DELETE FROM clinic_saturday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully removed!");
            }
            update_table();
            
            
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(ClinicScheduleSet.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tblClinicDates.getSelectionModel().clearSelection();
        btnDelete.setEnabled(false);
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDeselect.setEnabled(false);
        cmbClinicType.setSelectedIndex(1);
        cmbDay.setSelectedIndex(1);
        txtRoomNo.setText("");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cmbClinicTypePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbClinicTypePropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbClinicTypePropertyChange

    private void btnDeselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeselectActionPerformed
        // TODO add your handling code here:
        tblClinicDates.getSelectionModel().clearSelection();
        btnDelete.setEnabled(false);
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDeselect.setEnabled(false);
    }//GEN-LAST:event_btnDeselectActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int row = tblClinicDates.getSelectedRow();
        String clinic = (String)(tblClinicDates.getModel().getValueAt(row, 0));
        String day = (String)(tblClinicDates.getModel().getValueAt(row, 1));
        String room = (String)(tblClinicDates.getModel().getValueAt(row, 2));
        
        String strClinic = (String) cmbClinicType.getSelectedItem();
        String strDay = (String) cmbDay.getSelectedItem();
        String roomNo = txtRoomNo.getText().trim();
         if ((roomNo != null) && (!roomNo.isEmpty()))
        {   
        try 
        {
            String sqlQuery = "UPDATE clinicschedule SET clinic = ?,day = ?, roomNo = ? WHERE clinic = ? AND day = ? AND roomNo = ?";
            pst = con.prepareStatement(sqlQuery);
            pst.setString(1,strClinic);
            pst.setString(2,strDay);
            pst.setString(3,roomNo);
            pst.setString(4,clinic);
            pst.setString(5,day);
            pst.setString(6,room);
            pst.execute();
            if (day.equals("Monday"))
            {
                sqlQuery = "DELETE FROM clinic_monday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
            }
            else if (day.equals("Tuesday"))
            {
                sqlQuery = "DELETE FROM clinic_tuesday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
            }
            else if (day.equals("Wednesday"))
            {
                sqlQuery = "DELETE FROM clinic_wednesday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
            }
            else if (day.equals("Thursday"))
            {
                sqlQuery = "DELETE FROM clinic_thursday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
            }
            else if (day.equals("Friday"))
            {
                sqlQuery = "DELETE FROM clinic_friday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
            }
            else if (day.equals("Saturday"))
            {
                sqlQuery = "DELETE FROM clinic_saturday WHERE clinic = ?";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, clinic);
                pst.execute();
            }
            update_table();
            
            
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(ClinicScheduleSet.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         try 
        {
            String sqlQuery;
            if (strDay.equals("Monday"))
            {
                sqlQuery = "INSERT INTO clinic_monday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Updated!");
            }
            else if (strDay.equals("Tuesday"))
            {
                sqlQuery = "INSERT INTO clinic_tuesday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Updated!");
            }
            else if (strDay.equals("Wednesday"))
            {
                sqlQuery = "INSERT INTO clinic_wednesday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Updated!");
            }
            else if (strDay.equals("Thursday"))
            {
                sqlQuery = "INSERT INTO clinic_thursday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Updated!");
            }
            else if (strDay.equals("Friday"))
            {
                sqlQuery = "INSERT INTO clinic_friday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Updated!");
            }
            else if (strDay.equals("Saturday"))
            {
                sqlQuery = "INSERT INTO clinic_saturday (clinic) values (?)";
                pst = con.prepareStatement(sqlQuery);
                pst.setString(1, strClinic);
                pst.execute();
                update_table();
                JOptionPane.showMessageDialog(null, "Clinic Date Sucessfully Updated!");
            }
            
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(ClinicScheduleSet.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Room Number cannot be empty.");
        }
         
        tblClinicDates.getSelectionModel().clearSelection();
        btnDelete.setEnabled(false);
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDeselect.setEnabled(false);
        cmbClinicType.setSelectedIndex(0);
        cmbDay.setSelectedIndex(0);
        txtRoomNo.setText("");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        close();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClinicScheduleSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClinicScheduleSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClinicScheduleSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClinicScheduleSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClinicScheduleSet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeselect;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cmbClinicType;
    private javax.swing.JComboBox cmbDay;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblUserLevel;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JPanel pnlAddClinic;
    private javax.swing.JTable tblClinicDates;
    private javax.swing.JTextField txtRoomNo;
    // End of variables declaration//GEN-END:variables
}
