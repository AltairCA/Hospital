package StaffManagement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.Label;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Alex
 */
public class ViewStaffAttendanceReport extends parent {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    /**
     * Creates new form main
     */
    
    public ViewStaffAttendanceReport() {
        initComponents();

        con = DBConnect.ConnectDB();
        initialize();
        

    }

    public void createImage(String str) {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cmbmonth = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        cmbdesignation = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblattendance = new javax.swing.JTable();
        lbl2 = new javax.swing.JLabel();
        lbl3 = new javax.swing.JLabel();
        lbl4 = new javax.swing.JLabel();
        lbl5 = new javax.swing.JLabel();
        lbl6 = new javax.swing.JLabel();
        lbl7 = new javax.swing.JLabel();
        lbl8 = new javax.swing.JLabel();
        lbl9 = new javax.swing.JLabel();
        lbl10 = new javax.swing.JLabel();
        lbl22 = new javax.swing.JLabel();
        lbl23 = new javax.swing.JLabel();
        lbl24 = new javax.swing.JLabel();
        lbl25 = new javax.swing.JLabel();
        lbl26 = new javax.swing.JLabel();
        lbl27 = new javax.swing.JLabel();
        lbl28 = new javax.swing.JLabel();
        lbl29 = new javax.swing.JLabel();
        lbl31 = new javax.swing.JLabel();
        lbl21 = new javax.swing.JLabel();
        lbl11 = new javax.swing.JLabel();
        lbl12 = new javax.swing.JLabel();
        lbl13 = new javax.swing.JLabel();
        lbl14 = new javax.swing.JLabel();
        lbl20 = new javax.swing.JLabel();
        lbl15 = new javax.swing.JLabel();
        lbl16 = new javax.swing.JLabel();
        lbl17 = new javax.swing.JLabel();
        lbl18 = new javax.swing.JLabel();
        lbl19 = new javax.swing.JLabel();
        lbl30 = new javax.swing.JLabel();
        lbl1 = new javax.swing.JLabel();
        lblmo = new javax.swing.JLabel();
        lbl36 = new javax.swing.JLabel();
        lbl37 = new javax.swing.JLabel();
        lbl38 = new javax.swing.JLabel();
        lbl39 = new javax.swing.JLabel();
        lbl40 = new javax.swing.JLabel();
        lbl41 = new javax.swing.JLabel();
        lbl42 = new javax.swing.JLabel();
        lbl43 = new javax.swing.JLabel();
        lbl44 = new javax.swing.JLabel();
        lbl45 = new javax.swing.JLabel();
        lbl46 = new javax.swing.JLabel();
        lbl47 = new javax.swing.JLabel();
        lbl48 = new javax.swing.JLabel();
        lbl49 = new javax.swing.JLabel();
        lbl50 = new javax.swing.JLabel();
        lbl51 = new javax.swing.JLabel();
        lbl52 = new javax.swing.JLabel();
        lbl53 = new javax.swing.JLabel();
        lbl54 = new javax.swing.JLabel();
        lbl55 = new javax.swing.JLabel();
        lbl56 = new javax.swing.JLabel();
        lbl57 = new javax.swing.JLabel();
        lbl58 = new javax.swing.JLabel();
        lbl59 = new javax.swing.JLabel();
        lbl60 = new javax.swing.JLabel();
        lbl61 = new javax.swing.JLabel();
        lbl62 = new javax.swing.JLabel();
        lbl63 = new javax.swing.JLabel();
        lbl100 = new javax.swing.JLabel();
        lbl101 = new javax.swing.JLabel();
        lbl34 = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        Background = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Equipment Management System");
        setBackground(new java.awt.Color(204, 204, 204));
        setForeground(java.awt.SystemColor.activeCaptionText);
        setMinimumSize(new java.awt.Dimension(829, 690));
        setResizable(false);
        getContentPane().setLayout(null);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 100, 820, 10);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Attendace/admin1.png"))); // NOI18N
        getContentPane().add(jLabel12);
        jLabel12.setBounds(750, 10, 60, 80);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 51));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Logout");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jLabel13);
        jLabel13.setBounds(650, 70, 50, 20);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("<html>Hello Sleepy!<br> level : Admin </html>");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(640, 30, 100, 30);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Profile");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jLabel15);
        jLabel15.setBounds(650, 10, 50, 20);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Attendace/home.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(20, 20, 73, 60);

        jLabel6.setText("Month");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(420, 150, 70, 20);

        cmbmonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cmbmonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbmonthActionPerformed(evt);
            }
        });
        getContentPane().add(cmbmonth);
        cmbmonth.setBounds(480, 150, 160, 20);

        jButton2.setText("View Report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(480, 230, 140, 23);

        cmbdesignation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Doctor", "Nurse", "Support Staff" }));
        cmbdesignation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbdesignationActionPerformed(evt);
            }
        });
        getContentPane().add(cmbdesignation);
        cmbdesignation.setBounds(190, 200, 160, 20);

        jLabel5.setText("Designation");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(100, 200, 70, 20);

        jLabel3.setText("Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(100, 150, 40, 14);

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });
        getContentPane().add(txtname);
        txtname.setBounds(190, 150, 160, 30);

        tblattendance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblattendance);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(110, 330, 452, 120);

        lbl2.setText("1");
        getContentPane().add(lbl2);
        lbl2.setBounds(680, 210, 20, 20);

        lbl3.setText("1");
        getContentPane().add(lbl3);
        lbl3.setBounds(680, 240, 20, 20);

        lbl4.setText("1");
        getContentPane().add(lbl4);
        lbl4.setBounds(680, 270, 20, 20);

        lbl5.setText("1");
        getContentPane().add(lbl5);
        lbl5.setBounds(680, 300, 20, 20);

        lbl6.setText("1");
        getContentPane().add(lbl6);
        lbl6.setBounds(680, 330, 20, 20);

        lbl7.setText("1");
        getContentPane().add(lbl7);
        lbl7.setBounds(680, 360, 20, 20);

        lbl8.setText("1");
        getContentPane().add(lbl8);
        lbl8.setBounds(680, 390, 20, 20);

        lbl9.setText("1");
        getContentPane().add(lbl9);
        lbl9.setBounds(680, 420, 20, 20);

        lbl10.setText("1");
        getContentPane().add(lbl10);
        lbl10.setBounds(680, 450, 20, 20);

        lbl22.setText("1");
        getContentPane().add(lbl22);
        lbl22.setBounds(780, 210, 20, 20);

        lbl23.setText("1");
        getContentPane().add(lbl23);
        lbl23.setBounds(780, 240, 20, 20);

        lbl24.setText("1");
        getContentPane().add(lbl24);
        lbl24.setBounds(780, 270, 20, 20);

        lbl25.setText("1");
        getContentPane().add(lbl25);
        lbl25.setBounds(780, 300, 20, 20);

        lbl26.setText("1");
        getContentPane().add(lbl26);
        lbl26.setBounds(780, 330, 20, 20);

        lbl27.setText("1");
        getContentPane().add(lbl27);
        lbl27.setBounds(780, 360, 20, 20);

        lbl28.setText("1");
        getContentPane().add(lbl28);
        lbl28.setBounds(780, 390, 20, 20);

        lbl29.setText("1");
        getContentPane().add(lbl29);
        lbl29.setBounds(780, 420, 20, 20);

        lbl31.setText("1");
        getContentPane().add(lbl31);
        lbl31.setBounds(730, 480, 20, 20);

        lbl21.setText("1");
        getContentPane().add(lbl21);
        lbl21.setBounds(780, 180, 20, 20);

        lbl11.setText("1");
        getContentPane().add(lbl11);
        lbl11.setBounds(730, 180, 20, 20);

        lbl12.setText("1");
        getContentPane().add(lbl12);
        lbl12.setBounds(730, 210, 20, 20);

        lbl13.setText("1");
        getContentPane().add(lbl13);
        lbl13.setBounds(730, 240, 20, 20);

        lbl14.setText("1");
        getContentPane().add(lbl14);
        lbl14.setBounds(730, 270, 20, 20);

        lbl20.setText("1");
        getContentPane().add(lbl20);
        lbl20.setBounds(730, 450, 20, 20);

        lbl15.setText("1");
        getContentPane().add(lbl15);
        lbl15.setBounds(730, 300, 20, 20);

        lbl16.setText("1");
        getContentPane().add(lbl16);
        lbl16.setBounds(730, 330, 20, 20);

        lbl17.setText("1");
        getContentPane().add(lbl17);
        lbl17.setBounds(730, 360, 20, 20);

        lbl18.setText("1");
        getContentPane().add(lbl18);
        lbl18.setBounds(730, 390, 20, 20);

        lbl19.setText("1");
        getContentPane().add(lbl19);
        lbl19.setBounds(730, 420, 20, 20);

        lbl30.setText("1");
        getContentPane().add(lbl30);
        lbl30.setBounds(780, 450, 20, 20);

        lbl1.setText("1");
        getContentPane().add(lbl1);
        lbl1.setBounds(680, 180, 20, 20);
        getContentPane().add(lblmo);
        lblmo.setBounds(690, 140, 100, 20);

        lbl36.setText("17");
        getContentPane().add(lbl36);
        lbl36.setBounds(710, 360, 20, 20);

        lbl37.setText("31");
        getContentPane().add(lbl37);
        lbl37.setBounds(710, 480, 20, 20);

        lbl38.setText(" 16");
        getContentPane().add(lbl38);
        lbl38.setBounds(710, 330, 20, 20);

        lbl39.setText(" 15");
        getContentPane().add(lbl39);
        lbl39.setBounds(710, 300, 20, 20);

        lbl40.setText(" 10");
        getContentPane().add(lbl40);
        lbl40.setBounds(660, 450, 20, 20);

        lbl41.setText(" 7");
        getContentPane().add(lbl41);
        lbl41.setBounds(670, 360, 20, 20);

        lbl42.setText(" 6");
        getContentPane().add(lbl42);
        lbl42.setBounds(670, 330, 20, 20);

        lbl43.setText(" 5");
        getContentPane().add(lbl43);
        lbl43.setBounds(670, 300, 20, 20);

        lbl44.setText(" 4");
        getContentPane().add(lbl44);
        lbl44.setBounds(670, 270, 20, 20);

        lbl45.setText(" 3");
        getContentPane().add(lbl45);
        lbl45.setBounds(670, 240, 20, 20);

        lbl46.setText(" 2");
        getContentPane().add(lbl46);
        lbl46.setBounds(670, 210, 20, 20);

        lbl47.setText(" 1");
        getContentPane().add(lbl47);
        lbl47.setBounds(670, 180, 20, 20);

        lbl48.setText("30");
        getContentPane().add(lbl48);
        lbl48.setBounds(760, 450, 20, 20);

        lbl49.setText("27");
        getContentPane().add(lbl49);
        lbl49.setBounds(760, 360, 20, 20);

        lbl50.setText("26");
        getContentPane().add(lbl50);
        lbl50.setBounds(760, 330, 20, 20);

        lbl51.setText("25");
        getContentPane().add(lbl51);
        lbl51.setBounds(760, 300, 20, 20);

        lbl52.setText(" 24");
        getContentPane().add(lbl52);
        lbl52.setBounds(760, 270, 20, 20);

        lbl53.setText(" 23");
        getContentPane().add(lbl53);
        lbl53.setBounds(760, 240, 20, 20);

        lbl54.setText(" 22");
        getContentPane().add(lbl54);
        lbl54.setBounds(760, 210, 20, 20);

        lbl55.setText(" 21");
        getContentPane().add(lbl55);
        lbl55.setBounds(760, 180, 20, 20);

        lbl56.setText(" 9");
        getContentPane().add(lbl56);
        lbl56.setBounds(670, 420, 20, 20);

        lbl57.setText(" 19");
        getContentPane().add(lbl57);
        lbl57.setBounds(710, 420, 20, 20);

        lbl58.setText("29");
        getContentPane().add(lbl58);
        lbl58.setBounds(760, 420, 20, 20);

        lbl59.setText(" 8");
        getContentPane().add(lbl59);
        lbl59.setBounds(670, 390, 20, 20);

        lbl60.setText(" 18");
        getContentPane().add(lbl60);
        lbl60.setBounds(710, 390, 20, 20);

        lbl61.setText("28");
        getContentPane().add(lbl61);
        lbl61.setBounds(760, 390, 20, 20);

        lbl62.setText("20");
        getContentPane().add(lbl62);
        lbl62.setBounds(710, 450, 20, 20);

        lbl63.setText(" 14");
        getContentPane().add(lbl63);
        lbl63.setBounds(710, 270, 20, 20);

        lbl100.setText(" 12");
        getContentPane().add(lbl100);
        lbl100.setBounds(710, 210, 20, 20);

        lbl101.setText(" 13");
        getContentPane().add(lbl101);
        lbl101.setBounds(710, 240, 20, 20);

        lbl34.setText(" 11");
        getContentPane().add(lbl34);
        lbl34.setBounds(710, 180, 20, 20);

        btnCreate.setText("Create Report");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        getContentPane().add(btnCreate);
        btnCreate.setBounds(380, 510, 150, 23);

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StaffManagement/11754783_1132556243424388_4078586450580011341_o.jpg"))); // NOI18N
        Background.setText("jLabel23");
        getContentPane().add(Background);
        Background.setBounds(0, 0, 830, 690);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String name = txtname.getText().trim();
        String desig = (String) cmbdesignation.getSelectedItem();
        String mon = (String) cmbmonth.getSelectedItem();
        
        lblmo.setText(mon);
        int month;
        
        switch (mon.toLowerCase()) {
            case "january":
                month = 1;
                break;
            case "february":
                month = 2;
                break;
            case "march":
                month = 3;
                break;
            case "april":
                month = 4;
                break;
            case "may":
                month = 5;
                break;
            case "june":
                month = 6;
                break;
            case "july":
                month = 7;
                break;
            case "august":
                month = 8;
                break;
            case "september":
                month = 9;
                break;
            case "october":
                month = 10;
                break;
            case "november":
                month = 11;
                break;
            case "december":
                month = 12;
                break;
            default:
                month = 1;
                break;
        }
        if (name.length()!=0){
            
            
        
        try {
            // TODO add your handling code here:
            String sql = "SELECT e.employeeNo,e.name,count(a.rdate) AS Monthly FROM employee e,attendace a where e.employeeNo=a.employeeNo AND e.name=? AND MONTH(a.rdate)=?";
            pst = con.prepareStatement(sql);
            pst.setString(1, name);
            pst.setInt(2, month);
            rs = pst.executeQuery();
            tblattendance.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException ex) {
            Logger.getLogger(ViewStaffAttendanceReport.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Invalid details");
        }

        try {
            String q = "Select DAYOFMONTH(a.rdate) as Dates FROM employee e,attendace a where e.name=? and e.employeeNo=a.employeeNo and MONTH(a.rdate)=?";

            pst = con.prepareStatement(q);
            pst.setString(1, name);
            pst.setInt(2, month);
            rs = pst.executeQuery();
           
            String str = null;

            while (rs.next()) {

                Integer number = rs.getInt(1);
                String greenimg = "download.png";

                URL url = getClass().getResource(greenimg);

                switch (number) {
                    case 1: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl1.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }

                    case 2: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl2.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 3: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl3.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 4: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl4.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 5: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl5.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 6: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl6.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 7: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl7.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 8: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl8.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 9: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl9.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 10: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl10.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 11: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl11.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 12: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl12.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 13: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl13.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 14: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl14.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 15: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl15.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 16: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl16.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 17: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl17.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 18: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl18.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 19: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl19.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 20: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl20.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 21: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl21.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 22: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl22.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 23: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl23.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 24: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl24.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 25: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl25.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 26: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl26.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 27: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl27.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 28: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl28.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 29: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl29.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }
                    case 30: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl30.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }

                    case 31: {
                        try {
                            BufferedImage image = ImageIO.read(url);
                            lbl31.setIcon(new ImageIcon(image));
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        break;
                    }

                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(ViewStaffAttendanceReport.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        }else{}


    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        AdminJFrame ajf = new AdminJFrame();
        ajf.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    
        
    private void initialize() {
        
        
        cmbmonth.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {
                String mon = (String) cmbmonth.getSelectedItem();
        
        switch (mon.toLowerCase()) {
            case "september":
            case "november":
            case "april":
            case "june":
            lbl31.setEnabled(false);
            break;
            case "february":
            lbl31.setEnabled(false);
            lbl30.setEnabled(false);
            lbl29.setEnabled(false);
            break;
            default:
                lbl1.setEnabled(true);
                lbl2.setEnabled(true);
                lbl3.setEnabled(true);
                lbl4.setEnabled(true);
                lbl5.setEnabled(true);
                lbl6.setEnabled(true);
                lbl7.setEnabled(true);
                lbl8.setEnabled(true);
                lbl9.setEnabled(true);
                lbl10.setEnabled(true);
                lbl11.setEnabled(true);
                lbl12.setEnabled(true);
                lbl13.setEnabled(true);
                lbl14.setEnabled(true);
                lbl15.setEnabled(true);
                lbl16.setEnabled(true);
                lbl17.setEnabled(true);
                lbl18.setEnabled(true);
                lbl19.setEnabled(true);
                lbl20.setEnabled(true);
                lbl21.setEnabled(true);
                lbl22.setEnabled(true);
                lbl23.setEnabled(true);
                lbl24.setEnabled(true);
                lbl25.setEnabled(true);
                lbl26.setEnabled(true);
                lbl27.setEnabled(true);
                lbl28.setEnabled(true);
                lbl29.setEnabled(true);
                lbl30.setEnabled(true);
                lbl31.setEnabled(true);
                break;
        }
                String redimg = "glossy-red-icon-angle-md.png";
                URL url2 = getClass().getResource(redimg);
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl1.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl2.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl3.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl4.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl5.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl6.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl7.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl8.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl9.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl10.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl11.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl12.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl13.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl14.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl15.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl16.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl17.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl18.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl19.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl20.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl21.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl22.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl23.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl24.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl25.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl26.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl27.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl28.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl29.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl30.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }try {
                    BufferedImage image = ImageIO.read(url2);
                    lbl31.setIcon(new ImageIcon(image));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                
                
                
                
            }
        });

    }
    private void cmbmonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbmonthActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbmonthActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCreateActionPerformed

    private void cmbdesignationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbdesignationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbdesignationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewStaffAttendanceReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewStaffAttendanceReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewStaffAttendanceReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewStaffAttendanceReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewStaffAttendanceReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton btnCreate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbdesignation;
    private javax.swing.JComboBox cmbmonth;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl10;
    private javax.swing.JLabel lbl100;
    private javax.swing.JLabel lbl101;
    private javax.swing.JLabel lbl11;
    private javax.swing.JLabel lbl12;
    private javax.swing.JLabel lbl13;
    private javax.swing.JLabel lbl14;
    private javax.swing.JLabel lbl15;
    private javax.swing.JLabel lbl16;
    private javax.swing.JLabel lbl17;
    private javax.swing.JLabel lbl18;
    private javax.swing.JLabel lbl19;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl20;
    private javax.swing.JLabel lbl21;
    private javax.swing.JLabel lbl22;
    private javax.swing.JLabel lbl23;
    private javax.swing.JLabel lbl24;
    private javax.swing.JLabel lbl25;
    private javax.swing.JLabel lbl26;
    private javax.swing.JLabel lbl27;
    private javax.swing.JLabel lbl28;
    private javax.swing.JLabel lbl29;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl30;
    private javax.swing.JLabel lbl31;
    private javax.swing.JLabel lbl34;
    private javax.swing.JLabel lbl36;
    private javax.swing.JLabel lbl37;
    private javax.swing.JLabel lbl38;
    private javax.swing.JLabel lbl39;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel lbl40;
    private javax.swing.JLabel lbl41;
    private javax.swing.JLabel lbl42;
    private javax.swing.JLabel lbl43;
    private javax.swing.JLabel lbl44;
    private javax.swing.JLabel lbl45;
    private javax.swing.JLabel lbl46;
    private javax.swing.JLabel lbl47;
    private javax.swing.JLabel lbl48;
    private javax.swing.JLabel lbl49;
    private javax.swing.JLabel lbl5;
    private javax.swing.JLabel lbl50;
    private javax.swing.JLabel lbl51;
    private javax.swing.JLabel lbl52;
    private javax.swing.JLabel lbl53;
    private javax.swing.JLabel lbl54;
    private javax.swing.JLabel lbl55;
    private javax.swing.JLabel lbl56;
    private javax.swing.JLabel lbl57;
    private javax.swing.JLabel lbl58;
    private javax.swing.JLabel lbl59;
    private javax.swing.JLabel lbl6;
    private javax.swing.JLabel lbl60;
    private javax.swing.JLabel lbl61;
    private javax.swing.JLabel lbl62;
    private javax.swing.JLabel lbl63;
    private javax.swing.JLabel lbl7;
    private javax.swing.JLabel lbl8;
    private javax.swing.JLabel lbl9;
    private javax.swing.JLabel lblmo;
    private javax.swing.JTable tblattendance;
    private javax.swing.JTextField txtname;
    // End of variables declaration//GEN-END:variables
}
